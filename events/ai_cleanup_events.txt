###########################################
#by Silfae

namespace = aicleanup


##################################################################

character_event = {
	id = aicleanup.002
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = { any_demesne_title = { grant_title = ROOT } }
	}
}

#on death to pass Avelorn to the next Everqueen
character_event = {
	id = aicleanup.003
	hide_window = yes
	religion = cadai
	only_rulers = yes
	only_women = yes

	is_triggered_only = yes

	trigger = { #	has_landed_title = k_avelorn
			trait = everqueen
			everqueen_heir = { is_alive = yes }
		}

	immediate = {
		everqueen_heir = { character_event = { id = aicleanup.004 } }
	}
}

# Inheritance Everqueen
character_event = {
	id = aicleanup.004
	hide_window = yes

	is_triggered_only = yes

	immediate = { remove_trait = everqueen_heir
			add_trait = everqueen
			 set_character_flag = ai_flag_refuse_conversion
			any_demesne_title = { limit = { has_title_flag = asur_supercourtier_flag }
							unsafe_destroy_landed_title = THIS }
			FROM = { any_demesne_title = { grant_title = ROOT } }
			}
}
##################################################################

### The Everqueen/Phoenix King traits

# Everqueen Trait Lost
character_event = {
	id = aicleanup.005
	hide_window = yes
	religion = cadai
	only_women = yes
	is_triggered_only = yes

	trigger = {
		trait = everqueen
		NOT = { has_landed_title = k_avelorn }
		is_alive = yes
	}

	immediate = {
		remove_trait = everqueen
	}
}
# Phoenix King trait lost
character_event = {
	id = aicleanup.006
	hide_window = yes
	only_men = yes
	is_triggered_only = yes
	
	trigger = {
		trait = phoenix_king
		NOT = { has_landed_title = e_ulthuan }
		is_alive = yes
	}

	immediate = {
		remove_trait = phoenix_king
	}
}
# Gain old age traits
character_event = {
	id = aicleanup.007
	hide_window = yes
	min_age = 50
	is_triggered_only = yes
	
	trigger = {
		is_chaos_champion_chosen_or_prince_trigger = no
		immortal = no
		OR = { AND = { age = 50
				NOT = { trait = creature_dwarf
					trait = creature_chaos_dwarf } }
			AND = { age = 200
				OR = { trait = creature_dwarf
					trait = creature_chaos_dwarf } }
			}
		is_immortal_trigger = no

		OR = { trait = creature_human
			trait = creature_dwarf
			trait = creature_skaven
			trait = creature_chaos_dwarf
			trait = creature_halfling
			}
	}

	immediate = {
		if = { limit = {
		NOT = { trait = fair
			trait = pretty
			trait = beautiful } }
			add_trait = old_1 }
		if = { limit = { trait = fair }
			add_trait = old_2 }
		if = { limit = { trait = pretty }
			add_trait = old_3 }
		if = { limit = { trait = beautiful }
			add_trait = old_4 }
	}
}


#ROOT is the demander, FROM is the vassal
character_event = {
	id = aicleanup.008

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		FROM = {
			character_event = { id = aicleanup.009 }
		}
	}
}

#ROOT is the vassal, FROM is the demander
character_event = {
	id = aicleanup.009

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		# Fires for the vassal and each of his courtiers and vassals.
		# Note: needs to fire for vassals/courtier before character
		# FROMFROM is the demander. FROM is the vassal. ROOT is the character.
		event_target:converted = {
			character_event = { id = 39700 }
		}
	}
}

#Spell failed
character_event = {
	id = aicleanup.010
	desc = EVTDESCAaicleanup010
	is_triggered_only = yes

	notification = yes

	immediate = {
		prestige = -25
	}
	option = {	}
}

#Remove woodwalking
character_event = {
	id = aicleanup.011
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		remove_trait = woodwalking
	}
}
#Remove woodwalking
character_event = {
	id = aicleanup.012
	hide_window = yes
	is_triggered_only = yes
	religion_group = greenskin_gods_group
	immediate = {
		if={limit={government = greenskin_government2}
			set_government_type = greenskin_government
		}
	}
}

# Dwarf gains old gfx
character_event = {
	id = aicleanup.013
	hide_window = yes
	min_age = 200
	max_age = 390

	trigger = {
		age = 200
		OR = { trait = creature_dwarf
			trait = creature_chaos_dwarf }
		NOT = { graphical_culture = olddwarfgfx }
		NOT = { graphical_culture = oldchaosdwarfgfx }
		NOT = { graphical_culture = slayerdwarfgfx }
		is_immortal_trigger = no
	}

	mean_time_to_happen = {
		years = 3
	}
	immediate = {
		if = { limit = { trait = creature_chaos_dwarf
				NOT = { trait = transgender } }
			set_graphical_culture = dawi_zharr_old
			break = yes }
		if = { limit = { trait = creature_dwarf
				NOT = { trait = transgender } }
			set_graphical_culture = dwarf_old
			break = yes }

		if = { limit = { trait = creature_chaos_dwarf
					trait = transgender }
			set_graphical_culture = oldchaosdwarfrev
			break = yes }
		if = { limit = { 	trait = creature_dwarf
					trait = transgender }
			set_graphical_culture = olddwarfrev
			break = yes }
		add_trait = infertile
	}
}

# On_birth, dwarf children should not be old already
character_event = {
	id = aicleanup.014
	hide_window = yes
	is_triggered_only = yes


	trigger = {
		OR = { trait = creature_chaos_dwarf
			trait = creature_dwarf  }

		OR = { graphical_culture = olddwarfgfx
			graphical_culture = oldchaosdwarfgfx }
	}

	immediate = {
		if = {
			limit = {
				OR = {
					graphical_culture = olddwarfgfx
					graphical_culture = olddwarfrevgfx
				}
			}
			set_graphical_culture = dwarf_main
			break = yes
		}
		if = { limit = { OR = { graphical_culture = oldchaosdwarfgfx
					graphical_culture = oldchaosdwarfrevgfx } }
			set_graphical_culture = dawi_zharr
			break = yes }
	}
}

# On death of Master, free all mage_apprentices
character_event = {
	id = aicleanup.016
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_friend = { 
			trait = mage_apprentice 
			has_character_flag =  mage_master@ROOT
		}
	}

	immediate = {
		any_friend = { 
			limit = { has_character_flag =  mage_master@ROOT }
			remove_trait = mage_apprentice 
		}
	}
}

#Give the proper age traits to dwarves
character_event = {
	id = aicleanup.023
	hide_window = yes
	is_triggered_only = yes
	min_age = 16
	max_age = 550
	religion_group = dwarf_gods_group

	trigger = {
		trait = creature_dwarf
		NOR = { 
			trait = dwarf_slayer_king
			trait = dwarf_slayer
			trait = dwarf_warrior
			trait = quarreller
			trait = hammerer
			trait = thunderer
			AND={
				age=100
				trait = ironbreaker
			}
			AND={
				age=100
				trait = longbeard
			}
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = { age = 75 }
			}
			add_trait = beardling
		}
		if = {
			limit = {
				is_female = no
				age = 75
				martial = 20
				NOT = { trait = quarreller }
				NOT = { trait = hammerer }
				NOT = { trait = dwarf_warrior }
				NOT = { trait = thunderer }
			}
			add_trait = thunderer
			remove_trait = beardling
		}
		if = {
			limit = {
				is_female = no
				age = 75
				diplomacy = 15
				NOT = { trait = quarreller }
				NOT = { trait = hammerer }
				NOT = { trait = dwarf_warrior }
				NOT = { trait = thunderer }
			}
			add_trait = quarreller
			remove_trait = beardling
		}
		if = {
			limit = {
				is_female = no
				age = 75
				NOT = { martial = 20 }
				NOT = { diplomacy = 15 }
				NOT = { trait = quarreller }
				NOT = { trait = hammerer }
				NOT = { trait = dwarf_warrior }
				NOT = { trait = thunderer }
			}
			add_trait = dwarf_warrior
			remove_trait = beardling
		}
		if = {
			limit = {
				is_female = no
				age = 250
				NOT = { trait = longbeard }
				NOT = { trait = ironbreaker }
			}
			add_trait = longbeard
			remove_trait = beardling
		}
	}
}

#Special Titles breaks on the character's death
character_event = {
	id = aicleanup.024
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_landed_title = k_red_dukedom
			has_landed_title = k_drachenfels
			has_landed_title = e_sylvania
		}
	}

	immediate = {
		if = {
			limit = { character = k_red_dukedom }
			k_red_dukedom = { unsafe_destroy_landed_title = THIS }
		}
		if = {
			limit = { character = k_drachenfels }
			k_drachenfels = { unsafe_destroy_landed_title = THIS }
			clr_global_flag = drachenfels_back
		}
		if = {
			limit = { character = e_sylvania }
			e_sylvania = { unsafe_destroy_landed_title = THIS }
		}
	}
}

#On_death. The Big Witch Doctor is always a mage.
character_event = {
	id = aicleanup.027
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_landed_title = d_akghan_church }

	immediate = {  random_list = { 25 = {
					create_character = {
							random_traits = yes
							dynasty = NONE
							religion = ROOT
							culture = ROOT
							female = no
							age = 39
							}
						}
					25 = {
					create_character = {
							random_traits = yes
							dynasty = RANDOM
							religion = ROOT
							culture = ROOT
							female = no
							age = 56
							}
						}
					25 = {
					create_character = {
							random_traits = yes
							dynasty = RANDOM
							religion = ROOT
							culture = ROOT
							female = yes
							age = 42
							}
						}
					25 = {
					create_character = {
							random_traits = yes
							dynasty = NONE
							religion = ROOT
							culture = ROOT
							female = yes
							age = 54
							}
						}
				}
				new_character = {
					add_trait = celibate
					add_trait = creature_human
					random_list = {
						25 = {
							add_lore_of_light = yes
						}
						25 = {
							add_lore_of_fire = yes
						}
						25 = {
							add_lore_of_metal = yes
						}
						25 = {
							add_lore_of_life = yes
						}
					}
					random_list = { 50 = { add_trait = magic_potential_1 }
							30 = { add_trait = magic_potential_2 }
							15 = { add_trait = magic_potential_3 }
							5 = { add_trait = magic_potential_4 }
							 }
					z_magic_power_random = yes
					character_event = { id = aicleanup.002 }
					}
		 }
}

#On_death. The holder of the university of Martek is always a scholar.
character_event = {
	id = aicleanup.028
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_landed_title = d_university_of_martek }

	immediate = {  random_list = { 25 = {
					create_character = {
							random_traits = yes
							dynasty = RANDOM
							religion = ROOT
							culture = ROOT
							female = no
							age = 48
							}
						}
					25 = {
					create_character = {
							random_traits = yes
							dynasty = RANDOM
							religion = ROOT
							culture = ROOT
							female = no
							age = 53
							}
						}
					25 = {
					create_character = {
							random_traits = yes
							dynasty = RANDOM
							religion = ROOT
							culture = ROOT
							female = no
							age = 65
							}
						}
					25 = {
					create_character = {
							random_traits = yes
							dynasty = RANDOM
							religion = ROOT
							culture = ROOT
							female = no
							age = 70
							}
						}
				}
				new_character = {
					add_trait = creature_human
					add_trait = celibate
					add_trait = arabyan_scholar
					random_list = {
						25 = {
							add_lore_of_light = yes
						}
						25 = {
							add_lore_of_fire = yes
						}
						25 = {
							add_lore_of_metal = yes
						}
						25 = {
							add_lore_of_life = yes
						}
					}
					random_list = { 50 = { add_trait = magic_potential_1 }
							30 = { add_trait = magic_potential_2 }
							15 = { add_trait = magic_potential_3 }
							5 = { add_trait = magic_potential_4 }
							 }
					z_magic_power_random = yes
					character_event = { id = aicleanup.002 }
					}
		 }
}

#On Succession event - if holder of Samur's Witch Hunter chapter is not a Witch Hunter, the title disappears.
character_event = {
	id = aicleanup.029
	hide_window = yes
	only_rulers = yes

	is_triggered_only = yes

	trigger = { FROM = { title = d_samur_chapter }
		NOT = { trait = witch_hunter } }

	immediate = {
		d_samur_chapter = { destroy_landed_title = THIS }
		activate_title = { title = d_samur_chapter status = no }
		 }
}
#on_adolescence, elves receive the youngling trait, preventing them from wasting away themselves in lowborn marriages.
character_event = {
	id = aicleanup.030
	hide_window = yes

	is_triggered_only = yes

	trigger = { trait = creature_elf }

	immediate = {
		if = { limit = { is_female = yes }
			add_trait = elven_maiden }
		if = { limit = { is_female = no }
			add_trait = elven_scion }
		 }
}
#At 45, elves lose their youngling traits and can be married off.
character_event = {
	id = aicleanup.031
	hide_window = yes
	min_age = 45
	max_age = 60

	is_triggered_only = yes

	trigger = {
		trait = creature_elf
		OR = { trait = elven_scion
			trait = elven_maiden }
	}

	immediate = {
			remove_trait = elven_scion
			remove_trait = elven_maiden
			prestige = 50
		 }
}
#Cleansing event, on_ten_years
character_event = {
	id = aicleanup.032
	hide_window = yes
	min_age = 16
	ai = yes

	is_triggered_only = yes

	trigger = {
		OR = { AND = { trait = creature_skaven
				lower_tier_than = COUNT
				any_courtier = { trait = skaven_breeder
						count = 10 } }
			AND = { trait = creature_nehekharan
				lower_tier_than = DUKE
				any_courtier = { trait = khemri_soldier
						count = 10 } }
		 }
	}

	immediate = { #Bad AI, stop spawning useless stuff
			any_courtier = { limit = { trait = skaven_breeder }
					death = yes }
			any_courtier = { limit = { trait = khemri_soldier }
					death = yes }
		 }
}

# To Check for Mining outpost getting deleted. Fired from 'on_siege_over_winner'. Owner of the winning unit is ROOT. The taken Holding title is in FROM.
character_event = {
	id = aicleanup.040

	hide_window = yes
	is_triggered_only = yes

	desc = OK

	trigger = {
		#FROM=
		FROM = {has_province_flag = mining_outpost_flag}
	}
	immediate= {
		FROM = {
			province_event = { id=aicleanup.041 days=1}
		}
	}
	option = {
		name = OK
	}
}

character_event = {
	id = aicleanup.041
	desc = OK
	hide_window = yes

	is_triggered_only = yes
	immediate={if={limit={FROMFROM={has_trade_post=no}}clr_province_flag=mining_outpost_flag}}

	option = {
		name = OK
	}
}

character_event = {
	id = aicleanup.033
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		any_artifact = {
			limit = {
				has_artifact_flag = cursed
			}
			hidden_effect = {
				unsafe_destroy_artifact = yes
			}
		}
	}
}
