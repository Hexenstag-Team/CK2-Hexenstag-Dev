namespace = wh_chaos_dwarf

### Satrapy interactions ###

## Granting Satrapies ##

#AI pre-event, fired from on_new_holder
character_event = {
  id = wh_chaos_dwarf.11
  hide_window = yes

  religion = hashut  #definitely faster than only_playable in this on_action

  ai = yes

  trigger = {
    trait = creature_chaos_dwarf
    FROM = {
      location = {
        has_tribal = yes
      }
    }
  }

  immediate = {
    FROM = {
      save_event_target_as = target_satrapy
    }
    character_event = {
      id = wh_chaos_dwarf.12
    }
  }

}

#Install Satrap, player (from decision) and AI (from pre-event) meet here
#starting with bare bones version
character_event = {
  id = wh_chaos_dwarf.12
  hide_window = yes

  is_triggered_only = yes

  immediate = {
    create_random_satrap = yes
    new_character = {
      set_character_flag = gaining_satrapy
      event_target:target_satrapy = {
        grant_title = PREV
        location = {
          if = {
            limit = {
              culture = servile_hobgoblin
            }
            any_province_holding = {
              limit = {
                is_tribal = yes
              }
              add_building = tb_hobgoblin_overseers_1
            }
          }
        }
      }
    }
  }
}

### Favor of Hashut (hashut_favor variable) events ###

  #Hashut favor maintenance event
  #fires yearly, updates favor with bonuses for courtiers on the sorcerer track
  #Also checks progress of courtiers towards fulfilling Hashut objectives

  character_event = {
    id = wh_chaos_dwarf.100
    hide_window = yes
    is_triggered_only = yes

    religion = hashut

    min_age = 14

    trigger = {
      is_chaos_dwarf_sorcerer_path = yes
      trait = creature_chaos_dwarf #should be implied by previous checks but just in case
    }

    immediate = {
      #update hashut_favor
      if = {
        limit = {
          is_hashut_good_minion_trigger = yes
        }
        change_variable = {
          which = hashut_favor
          value = 0.75
        }
        #send notification to the player if they want it
        if = {
          limit = {
            ai = no
            NOR = {
              has_character_flag = hashut_favor_all_silenced
              has_character_flag = hashut_favor_good_minion_silenced
            }
          }
          #clear the two specific silencing flags so player will get notified if they return to either status
          clr_character_flag = hashut_favor_OK_minion_silenced
          clr_character_flag = hashut_favor_bad_minion_silenced
          character_event = {
            id = wh_chaos_dwarf.101
            days = 3
            random = 3
          }
        }
      }
      else_if = {
        limit = {
          is_hashut_bad_minion_trigger = yes
        }
        change_variable = {
          which = hashut_favor
          value = -0.25
        }
        #send notification to the player if they want it
        if = {
          limit = {
            ai = no
            NOR = {
              has_character_flag = hashut_favor_all_silenced
              has_character_flag = hashut_favor_bad_minion_silenced
            }
          }
          #clear the two specific silencing flags so player will get notified if they return to either status
          clr_character_flag = hashut_favor_good_minion_silenced
          clr_character_flag = hashut_favor_OK_minion_silenced
          character_event = {
            id = wh_chaos_dwarf.103
            days = 3
            random = 3
          }
        }
      }
      #not good, not bad
      else = {
        change_variable = {
          which = hashut_favor
          value = 0.25
        }
        #send notification to the player if they want it
        if = {
          limit = {
            ai = no
            NOR = {
              has_character_flag = hashut_favor_all_silenced
              has_character_flag = hashut_favor_OK_minion_silenced
            }
          }
          #clear the two specific silencing flags so player will get notified if they return to either status
          clr_character_flag = hashut_favor_good_minion_silenced
          clr_character_flag = hashut_favor_bad_minion_silenced
          character_event = {
            id = wh_chaos_dwarf.102
            days = 3
            random = 3
          }
        }
      }
      #AI bonus
      if = {
        limit = {
          ai = yes
        }
        change_variable = {
          which = hashut_favor
          value = 0.5
        }
      }
      #now check for becoming daemonsmith
      if = {
        limit = {
          has_ambition = obj_chaos_dwarf_become_daemonsmith
          check_variable = {
            which = hashut_favor
            value >= 10
          }
        }
        character_event = {
          id = wh_chaos_dwarf.110
          days = 15
          random = 10
        }
        #keep this somewhat mysterious, mechanics could be made more transparent to the player if desired
        change_variable = {
          which = hashut_favor
          value = -10
        }
      }
      #check for becoming sorcerer
      if = {
        limit = {
          has_ambition = obj_chaos_dwarf_become_sorcerer
          check_variable = {
            which = hashut_favor
            value >= 50
          }
        }
        #start trial of the sorcerer by pinging the High Priest
        e_hashut = {
          holder = {
            character_event = {
              id = wh_chaos_dwarf.120
              days = 30
              random = 150 #this should be unpredictable
            }
          }
        }
      }
    }

  }

  #Notification - good minion
  character_event = {
    id = wh_chaos_dwarf.101
    desc = EVTDESC_wh_chaos_dwarf.101
    picture = GFX_evt_hashut_rune
    border = GFX_event_normal_frame_religion
    is_triggered_only = yes

    trigger = {

    }

    option = {
      name = EVTOPT_hashut_guidance
      custom_tooltip = {
        text = hashut_favor_until_update_tt
        set_character_flag = hashut_favor_good_minion_silenced
      }
    }

    option = {
      name = EVTOPT_hashut_knows_me
      custom_tooltip = {
        text = hashut_favor_no_updates_tt
        set_character_flag = hashut_favor_all_silenced
      }
    }

  }
  #Notification - adequate minion
  character_event = {
    id = wh_chaos_dwarf.102
    desc = EVTDESC_wh_chaos_dwarf.102
    picture = GFX_evt_hashut_rune
    border = GFX_event_normal_frame_religion
    is_triggered_only = yes

    trigger = {

    }

    option = {
      name = EVTOPT_hashut_guidance
      custom_tooltip = {
        text = hashut_favor_until_update_tt
        set_character_flag = hashut_favor_OK_minion_silenced
      }
    }

    option = {
      name = EVTOPT_hashut_knows_me
      custom_tooltip = {
        text = hashut_favor_no_updates_tt
        set_character_flag = hashut_favor_all_silenced
      }
    }

  }
  #Notification - bad minion
  character_event = {
    id = wh_chaos_dwarf.103
    desc = EVTDESC_wh_chaos_dwarf.103
    picture = GFX_evt_hashut_rune
    border = GFX_event_normal_frame_religion
    is_triggered_only = yes

    trigger = {

    }

    option = {
      name = EVTOPT_hashut_guidance
      custom_tooltip = {
        text = hashut_favor_until_update_tt
        set_character_flag = hashut_favor_bad_minion_silenced
      }
    }

    option = {
      name = EVTOPT_hashut_knows_me
      custom_tooltip = {
        text = hashut_favor_no_updates_tt
        set_character_flag = hashut_favor_all_silenced
      }
    }

  }

  #set aside ids through 109 for future development of this line

  #Notification - become a daemonsmith
  character_event = {
    id = wh_chaos_dwarf.110
    desc = EVTDESC_wh_chaos_dwarf.110
    picture = GFX_evt_hashut_rune
    border = GFX_event_normal_frame_religion
    is_triggered_only = yes

    trigger = {

    }

    option = {
      name = EVTOPT_praise_hashut
      add_trait = chaos_dwarf_daemonsmith
      add_character_modifier = {
        name = magic_power_1
        duration = -1
      }
    }
  }

  #ids through to 119 reserved for expanding on daemonsmith

  # # Trial of the Sorcerer # #

  #Start by pinging the High Priest
  character_event = {
    id = wh_chaos_dwarf.120
    hide_window = yes

    is_triggered_only = yes

    immediate = {
      FROM = {
        letter_event = {
          id = wh_chaos_dwarf.121
          days = 15
          random = 15
        }
      }
    }
  }

  #receive letter from High Priest summoning the would-be sorcerer for the test
  letter_event = {
    id = wh_chaos_dwarf.121
    desc = EVTDESC_wh_chaos_dwarf.121
    portrait = FROM
    border = GFX_event_letter_frame_religion

    is_triggered_only = yes

    immediate = {
      character_event = {
        id = wh_chaos_dwarf.122
        days = 15
        random = 15
      }
    }

    #this is not negotiable
    option = {
      name = EVTOPT_praise_hashut
      add_trait = travelling
    }

  }

  #trial begins
  character_event = {
    id = wh_chaos_dwarf.122
    desc = EVTDESC_wh_chaos_dwarf.122
    picture = GFX_evt_altar_hashut
    border = GFX_event_normal_frame_religion

    is_triggered_only = yes

    #short-circuit to success conditions during testing
    option = {
      name = EVTOPT_praise_hashut
      add_trait = chaos_dwarf_sorcerer
      remove_trait = travelling
    }

  }
