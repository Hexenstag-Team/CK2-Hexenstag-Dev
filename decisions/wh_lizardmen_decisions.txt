
targetted_decisions = {

	give_province_lizardmen_1 = {
		only_playable = yes
		ai_check_interval = 12
		filter = realm
		ai_target_filter = self
		from_potential = {
			ai = no
			always = no #OBSOLETE
			trait = creature_skink
			NOT = { trait = incapable }
			is_ruler = yes
			NOR = { any_vassal = { has_character_modifier = tagged_recipient }
				any_courtier = { has_character_modifier = tagged_recipient }
				 }
		}

		potential = {
			trait = creature_skink
			always = no #OBSOLETE
			NOT = { character = FROM }
			liege = { character = FROM }
			NOT = { trait = incapable }
			custom_tooltip = { text = IS_NOT_INCAPACITATED
					is_incapacitated_trigger = no }
			NOT = { trait = disinherited_amazon }
			NOT = { trait = disinherited }                     # Can't do this decision on yourself...
		}
		allow = {
			FROM = { any_demesne_title = { can_be_given_away = yes } }
		}
		effect = {
			add_character_modifier =  { name = tagged_recipient duration = 30 }
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		} #closesaiwilldo
	} #decision

	give_province_amazon_1 = {
		ai = no
		filter = realm
		ai_target_filter = self
		from_potential = {
			trait = creature_amazon
			NOT = { trait = incapable }
			is_ruler = yes
			NOR = { any_vassal = { has_character_modifier = tagged_recipient }
				any_courtier = { has_character_modifier = tagged_recipient }
				 }
		}

		potential = {
			trait = creature_amazon
			NOT = { character = FROM }
			liege = { character = FROM }
					NOT = { trait = disinherited_amazon }
			NOT = { trait = disinherited }
			custom_tooltip = { text = IS_NOT_INCAPACITATED
					is_incapacitated_trigger = no }
		}
		allow = {
			FROM = {
				any_demesne_title = { can_be_given_away = yes }
			}
		}
		effect = {
			add_character_modifier =  { name = tagged_recipient hidden = yes duration = 30 }
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		} #closesaiwilldo
	} #decision

	# Amazon - Exile complacent Amazon (removed)

	#Decision to eat prisoners for the Miyan (removed)

title_decisions = {
	give_province_lizardmen_2 = {
		ai = no
		ai_check_interval = 12
		filter = owned
		ai_target_filter = owned

		potential = {
			can_be_given_away = yes
			always = no #OBSOLETE
			FROM = {
				culture_group = lizardman_group
				demesne_size = 2
			}
			holder_scope = {
				always = no #OBSOLETE
				character = FROM
				ai = no
			}
		}
		allow = { FROM = { OR = { any_vassal = { has_character_modifier = tagged_recipient }
					any_courtier = { has_character_modifier = tagged_recipient } } }
		}
		effect = {
			if = {
				limit = { FROM = { any_vassal = { has_character_modifier = tagged_recipient } } }
					FROM = { any_vassal = { limit = { has_character_modifier = tagged_recipient }
							ROOT = { grant_title = PREV
								set_government_type = lizardmen_government
								if = { limit = { higher_tier_than = COUNT }
									add_law = agnatic_succession
									add_law = succ_open_elective } }
							remove_character_modifier = tagged_recipient } }
				break = yes
				}
			if = {
				limit = { FROM = { any_courtier = { has_character_modifier = tagged_recipient } } }
					FROM = { any_courtier = { limit = { has_character_modifier = tagged_recipient }
							ROOT = { grant_title = PREV
								set_government_type = lizardmen_government
								if = { limit = { higher_tier_than = COUNT }
									add_law = agnatic_succession
									add_law = succ_open_elective } }
							remove_character_modifier = tagged_recipient } }
				break = yes
				}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = { factor = 0 }
	} #closestitledecision

	give_province_amazon_2 = {
		ai_check_interval = 12
		filter = owned
		ai_target_filter = owned
		only_playable = yes

		potential = {
			can_be_given_away = yes
			FROM = {
				trait = creature_amazon
				demesne_size = 2
			}
			holder_scope = {
				character = FROM
				ai = no
			}
		}
		allow = { FROM = { OR = { any_vassal = { has_character_modifier = tagged_recipient }
					any_courtier = { has_character_modifier = tagged_recipient } } }
		}
		effect = {
			if = {
				limit = { FROM = { any_vassal = { has_character_modifier = tagged_recipient } } }
					FROM = { any_vassal = { limit = { has_character_modifier = tagged_recipient }
							ROOT = { grant_title = PREV
								if = { limit = { higher_tier_than = COUNT }
									add_law = enatic_succession } }
							remove_character_modifier = tagged_recipient } }
				break = yes
				}
			if = {
				limit = { FROM = { any_courtier = { has_character_modifier = tagged_recipient } } }
					FROM = { any_courtier = { limit = { has_character_modifier = tagged_recipient }
							ROOT = { grant_title = PREV
								if = { limit = { higher_tier_than = COUNT }
									add_law = enatic_succession } }
							remove_character_modifier = tagged_recipient } }
				break = yes
				}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = { factor = 0 }
	} #closestitledecision

	give_province_lizardmen_ai = {
		ai_check_interval = 6
		filter = owned
		ai_target_filter = owned
		ai = no

		potential = {
			can_be_given_away = yes
			always = no #OBSOLETE
			FROM = { culture_group = lizardman_group
				demesne_size = 2
			}
			holder_scope = {
				always = no #OBSOLETE
				character = FROM
				ai = yes
				OR = { any_courtier = {
						is_female = no
						prisoner = no
						NOT = { character = FROM }
					NOT = { trait = disinherited_amazon }
						NOT = { trait = disinherited }
						trait = creature_skink
						}
					 any_vassal = {
						is_female = no
						prisoner = no
						NOT = { character = FROM }
					NOT = { trait = disinherited_amazon }
						NOT = { trait = disinherited }
						trait = creature_skink
						}
				}
			}
			tier = COUNT
			is_capital = no
		}
		allow = {
			always = yes
		}
		effect = {
			FROM = {
			if = {
				limit = { FROM = { any_vassal = { is_female = no
								prisoner = no
								NOT = { character = FROM }
								NOT = { trait = disinherited_amazon }
								NOT = { trait = disinherited }
								trait = creature_skink } } }
					FROM = { any_vassal = { limit = {
									is_female = no
									prisoner = no
									NOT = { character = FROM }
									NOT = { trait = disinherited_amazon }
									NOT = { trait = disinherited }
									trait = creature_skink }
							ROOT = { grant_title = PREV
								if = { limit = { higher_tier_than = COUNT }
									add_law = succ_appointment } }
							clr_character_flag = tagged_recipient } }
				break = yes
				}
			if = {
				limit = { FROM = { any_courtier = {
									is_female = no
									prisoner = no
									NOT = { character = FROM }
									NOT = { trait = disinherited_amazon }
									NOT = { trait = disinherited }
									trait = creature_skink } } }
					FROM = { any_courtier = { limit = {
									is_female = no
									prisoner = no
									NOT = { character = FROM }
									NOT = { trait = disinherited_amazon }
									NOT = { trait = disinherited }
									trait = creature_skink }
							ROOT = { grant_title = PREV
								if = { limit = { higher_tier_than = COUNT }
									add_law = succ_appointment } }
							clr_character_flag = tagged_recipient } }
				break = yes
				}
			}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1

			modifier = {
				factor = 0.5
				FROM = { trait = greedy }
			}
			modifier = {
				factor = 0
				FROM = { NOT = { over_max_demesne_size = 1 } }
			}
			modifier = {
				factor = 0
				FROM = { NOT = { any_demesne_title = { tier = DUKE
									count = 3 }
						 }
					 }
				ROOT = { tier = DUKE }
			}
		}
	} #closestitledecision

	#amazon give province decision removed

plot_decisions = {
	faction_misaligned_chief_ultimatum = {
		ai_check_interval = 12
		is_high_prio = yes
		only_playable = yes

		potential = {
			leads_faction = faction_misaligned_chief
			OR = {
				NOT = { has_character_flag = faction_misaligned_chief_ultimatum_taken }
				had_character_flag = { flag = faction_misaligned_chief_ultimatum_taken days = 7 }
			}
		}
		allow = {
			war = no
			prisoner = no
			custom_tooltip = { text = IS_NOT_INCAPACITATED
					is_incapacitated_trigger = no }
			liege = {
				NOT = { war_with = ROOT }
				NOT = { reverse_has_truce = ROOT }
			}
			capital_holding = {
				controller = {
					character = ROOT
				}
			}
		}
		effect = {
			liege = {
				letter_event = { id = slizardmen.3 days = 3 }
			}
			hidden_tooltip = {
				set_character_flag = faction_misaligned_chief_ultimatum_taken
			}
		}
		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1

			modifier = {
				factor = 0.5 # Slow it down a little
			}

			modifier = {
				factor = 2.5
				liege = { trait = defective }
			}

			modifier = {
				factor = 0
				NOT = {
					faction_power = {
						faction = faction_misaligned_chief
						power = 0.75
					}
				}
			}
			modifier = {
				factor = 0.1
				NOT = {
					faction_power = {
						faction = faction_misaligned_chief
						power = 1.0
					}
				}
			}
			modifier = {
				factor = 0.1
				NOT = {
					faction_power = {
						faction = faction_misaligned_chief
						power = 1.5
					}
				}
			}

			modifier = {
				factor = 0
				liege = {
					any_war = {
						OR = {
							AND = {
								defender = { character = PREV }
								NOT = { using_cb = depose_liege }
								NOT = { using_cb = overthrow_ruler }
								NOT = { using_cb = overthrow_ruler_no_calls }
							}
							AND = {
								attacker = { character = PREV }
								OR = {
									using_cb = invasion
									using_cb = religious
									using_cb = tribal_invasion
									# using_cb = viking_invasion
									using_cb = claim_all
									using_cb = claim
									using_cb = other_claim
								}
							}
						}
					}
				}
			}
		}
	}

	#amazon complacent queen plot removed

settlement_decisions = {
	cutback_jungle_decision = {
		ai = no # Handled by event
		filter = realm_owned
		ai_target_filter = owned
		only_playable = yes

		from_potential = {
		}

		potential = {
			is_capital = yes
			location = { has_province_modifier = lustria_jungle }
			OR = {
				holder_scope = { any_liege = { character = FROM } }
				holder_scope = { character = FROM } }
		}

		allow = {
			FROM = { wealth = 25 }
			location = {
				NOT = { has_province_modifier = recent_cutback }
				OR = {
					has_province_modifier = lustria_medium_jungle
					has_province_modifier = lustria_dense_jungle
					has_province_modifier = lustria_oppressive_jungle
				}
			}
			OR = {
				FROM = {
					in_command = no
			custom_tooltip = { text = IS_NOT_INCAPACITATED
					is_incapacitated_trigger = no }
				}
				FROM = { job_treasurer = {
							character = yes
							age = 16
							custom_tooltip = { text = IS_NOT_INCAPACITATED
								is_incapacitated_trigger = no }
							in_command = no }
					}
			}
		}

		effect = {
			location = {
				add_province_modifier =  { name = recent_cutback hidden = yes duration = 120 }
				}
			FROM = { character_event = { id = lizardman.261 } } #Choose who will cut back your jungle
		}

		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0.1
				FROM = { NOT = { wealth = 50 } }
			}
			modifier = {
				factor = 2
				location = { has_province_modifier = lustria_dense_jungle }
			}
			modifier = {
				factor = 5
				location = { has_province_modifier = lustria_oppressive_jungle }
			}
		}
	}

	#possibly obsolete?
	z_purge_province = {
		ai_check_interval = 6
		filter = sub_realm_owned
		ai_target_filter = sub_realm_owned
		only_playable = yes

		from_potential = {
			culture_group = lizardman_group
		}

		potential = {
			holder_scope = {
				character = FROM
			}
			dejure_liege_title = {
				holder_scope = {
					character = FROM
				}
			}
			NOT = {
				location = {
					culture_group = lizardman_group
				}
			}
		}
		allow = {
			holder_scope = {
				#has_character_modifier = favour_sotek
				war = no
			}
		}
		effect = {
			save_event_target_as = purge_prov
			location = {
				add_province_modifier = { name = z_being_purged duration = 3650 }
			}
			FROM = {
				character_event = { id = z_purge.0}
			}
		}
		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 0
		}
	}
}
