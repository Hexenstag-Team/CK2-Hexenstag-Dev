# Basic requirements to found, co-found, or join leagues.
# Intended to be unseen, used in "potential" rather than "allow".
league_potential_trigger = {
	independent = yes
	in_revolt = no
	is_landed = yes
	mercenary = no
	higher_real_tier_than = BARON
	trait = creature_human
	capital_scope = { region =  world_old_world_border_princes }
	NOT = { has_opinion_modifier = rejected_league_prop }
}

# Visible requirements for co-founding or joining leagues.
THIS_can_join_PREV_league_trigger = {
	# Not checked here: rank requirements (different for initial creation vs later additions)
	# Not checked here: adjacency requirements (graph traversal for initial creation)

	# Same religion group
	custom_tooltip = {
		text = SAME_RELIGION_GROUP  # Less confusing than e.g. "Is Christian"
		religion_group = PREV
	}

	trait = creature_human
	capital_scope = { region =  world_old_world_border_princes }

	is_primary_war_defender = no

	# Ally or potential ally
	custom_tooltip = {
		text = ELECTIVE_LEAGUE_ALLY_ETC
		OR = {
			is_allied_with = PREV                # Strong ally
			has_non_aggression_pact_with = PREV  # Potential ally, even if the AI hasn't bothered
			is_close_relative = PREV             # Potential ally, even if the AI hasn't bothered
			pays_tribute_to = PREV               # Weak ally
			is_friend = PREV                     # Weak ally
		}
	}

	# We like PREV enough to voluntarily create an alliance
	opinion = { who = PREV  value = 26 }
}

religion_allows_feudal_elective_trigger = {
	custom_tooltip = {
		text = FEUDAL_ELECTIVE_RELIGION_REQUIREMENT
		OR = {
			has_dlc = "Zeus"
			NOR = {
				religion_group = indian_group
				religion_group = muslim
			}
		}
	}
}

THIS_can_be_elector_of_PREV_trigger = {
	custom_tooltip = {
		text = CAN_BE_ELECTOR
		# Counts are only electors in duchies. Dukes and kings are always electors.
	    OR = {
	        higher_real_tier_than = COUNT
	        PREV = { tier = DUKE }
	    }
	}
}

THIS_and_PREV_same_rank_trigger = {
	custom_tooltip = {
		text = SAME_RANK
		OR = {
			AND = { tier = COUNT    PREV = { tier = COUNT   } }
			AND = { tier = DUKE     PREV = { tier = DUKE    } }
			AND = { tier = KING     PREV = { tier = KING    } }
			AND = { tier = EMPEROR  PREV = { tier = EMPEROR } }
		}
	}
}

# Checks whether two *independent* realms control adjacent *provinces*.
THIS_and_FROM_are_adjacent_trigger = {

	# Using "FROM" rather than "PREV" because the latter would require
	# "PREVPREVPREVPREVPREV" but it's only allowed to chain 4 levels.
	# Luckily, all users are happy with FROM, so no duplication is necessary.

	custom_tooltip = {
		text = ADJACENT_REALM
		any_realm_province = {
			any_neighbor_province = {
				owner = {
					top_liege = {
						character = FROM
					}
				}
			}
		}
	}
}
