####
#Rewritten magic system in 2020 by HandicapdHippo
####
####
#Battle Effects
####
new_battle_magic_calc_magic_pool = {
	#Magic Pool represents how long a mage can continue casting in battle before exhausting themselves. Mostly based on magic potential, but higher magic power can stretch their power further.
	set_variable = { which = MagicPool value = 1 }
	if = {
		limit = {
			trait = magic_potential_1
		}
		change_variable = { which = MagicPool value = 1 }
	}
	else_if = {
		limit = {
			trait = magic_potential_2
		}
		change_variable = { which = MagicPool value = 3 }
	}
	else_if = {
		limit = {
			trait = magic_potential_3
		}
		change_variable = { which = MagicPool value = 6 }
	}
	else_if = {
		limit = {
			trait = magic_potential_4
		}
		change_variable = { which = MagicPool value = 10 }
	}

	if = {
		limit = {
			has_character_modifier = magic_power_1
		}
	}
	else_if = {
		limit = {
			has_character_modifier = magic_power_2
		}
		change_variable = { which = MagicPool value = 1 }
	}
	else_if = {
		limit = {
			has_character_modifier = magic_power_3
		}
		change_variable = { which = MagicPool value = 2 }
	}
	else_if = {
		limit = {
			has_character_modifier = magic_power_4
		}
		change_variable = { which = MagicPool value = 3 }
	}

	#liche priests and tomb kings who know necromancy don't have magic potential, and a lot of them, tomb kings are already OP so will give them a tiny boost
	if = {
		limit = {
			trait = khemri_liche_priest
		}
		change_variable = { which = MagicPool value = 1 }
	}
	else_if = {
		limit = {
			trait = khemri_tomb_king
		}
		change_variable = { which = MagicPool value = 2 }
	}
	if = {
		limit = {
			trait = lore_hag
		}
		if = {
			limit = {
				location = { is_winter = yes }
				
			}
			change_variable = { which = MagicPool value = 1 }
		}
	}
	
	#Ice magic is more effective depending on climate 
	if = {
		limit = {
			trait = lore_ice
		}
		if = {
			limit = {
				location = { is_winter = yes }
				
			}
			change_variable = { which = MagicPool value = 1 }
		}
		if = {
			limit = {
				location = { climate = severe_winter }
				
			}
			change_variable = { which = MagicPool value = 1 }
		}
		else_if	= {
			limit = {
				location = { climate = mild_winter }
			}
			change_variable = { which = MagicPool value = -1 }
		}
		else_if	= {
			limit = {
				location = { 
					NOR = {
						climate = severe_winter
						climate = normal_winter
						climate = mild_winter 
					}
				}
			}
			change_variable = { which = MagicPool value = -2 }
		}
	}


	#Chaos gets demons as well so they have a lower pool
	if = {
		limit = {
			summons_daemons_in_battle = yes
			check_variable = { which = MagicPool value = 2 }
		}
		change_variable = { which = MagicPool value = -1 }
	}


	#Artifacts
	if = {
		limit = {
			any_artifact = {
				has_artifact_flag = armor
				NOT = { has_artifact_flag = armoured_caster }
				is_artifact_active = yes
			}
			#All armour is special mage armour for these cultures
			NOR = {
				culture = caledori
				culture = sapherian
				is_strong_trigger = yes
				is_vampire_trigger = yes
				trait = chaos_dwarf_sorcerer
			}
		}
		if = {
			limit = {
				quality < 5
			}
			change_variable = { which = MagicPool value = -2 }
		}
		else_if = {
			limit = {
				quality >= 5
			}
			change_variable = { which = MagicPool value = -1 }
		}
	}
	if = {
		limit = {
			any_artifact = {
				has_artifact_flag = power_stone
				is_artifact_active = yes
			}
		}
		change_variable = { which = MagicPool value = 2 }
	}
	if = {
		limit = {
			any_artifact = {
				has_artifact_flag = staff_battle_magic_pool_1
				is_artifact_active = yes
			}
		}
		change_variable = { which = MagicPool value = 1 }
	}
	if = {
		limit = {
			any_artifact = {
				has_artifact_flag = staff_battle_magic_pool_2
				is_artifact_active = yes
			}
		}
		change_variable = { which = MagicPool value = 2 }
	}
	if = {
		limit = {
			any_artifact = {
				has_artifact_flag = staff_battle_magic_pool_3
				is_artifact_active = yes
			}
		}
		change_variable = { which = MagicPool value = 3 }
	}
	
	#Non Magic traits, skilled mages can will apply their powers at the right times and avoid wasting power
	if = {
		limit = {
			martial < 6
			check_variable = { which = MagicPool value = 2 }
		}
		change_variable = { which = MagicPool value = -1 }
	}
	else_if = {
		limit = {
			martial >= 15
			martial <= 21
		}
		change_variable = { which = MagicPool value = 1 }
	}
	else_if = {
		limit = {
			martial >= 22
			martial <= 30
		}
		change_variable = { which = MagicPool value = 2 }
	}
	else_if = {
		limit = {
			martial > 30
		}
		change_variable = { which = MagicPool value = 3 }
	}

	#For simplicity Khorne Daemon summoners use the same pool variable with a static number per trait they have.
	#No else_if as can have more than one trait
	if = {
		limit = {
			trait = khorne_berserker
		}
		set_variable = { which = MagicPool value = 1 }
	}
	if = {
		limit = {
			trait = champion_khorne
		}
		set_variable = { which = MagicPool value = 2 }
	}
	if = {
		limit = {
			trait = chosen_khorne
		}
		set_variable = { which = MagicPool value = 3 }
	}
	if = {
		limit = {
			trait = prince_khorne
		}
		set_variable = { which = MagicPool value = 4 }
	}


	#easier than coding all the else_ifs
	prevent_negative_magic_pool = yes
	set_variable = { which = MagicPoolMax which = MagicPool }

	#Reductions

	if = {
		limit = {
			has_character_modifier = magic_siege_pool_reduction_timer
		}
		change_variable = { which = MagicPool value = -1 }
	}
}

prevent_negative_magic_pool = {
	if = {
		limit = {
			NOT = { check_variable = { which = MagicPool value = 1 } }
		}
		set_variable = { which = MagicPool value = 1 }
	}
}

new_battle_magic_calc_magic_units = {
	set_variable = { which = SpellUnitsToSpawn value = 1 }
	if = {
		limit = {
			has_character_modifier = magic_power_1
		}
		change_variable = { which = SpellUnitsToSpawn value = 2 }
	}
	else_if = {
		limit = {
			has_character_modifier = magic_power_2
		}
		change_variable = { which = SpellUnitsToSpawn value = 4 }
	}
	else_if = {
		limit = {
			has_character_modifier = magic_power_3
		}
		change_variable = { which = SpellUnitsToSpawn value = 6 }
	}
	else_if = {
		limit = {
			has_character_modifier = magic_power_4
		}
		change_variable = { which = SpellUnitsToSpawn value = 9 }
	}

	#More advanced magic gets more
	if = {
		limit = {
			trait = lore_dark_magic
		}
		change_variable = { which = SpellUnitsToSpawn value = 4 }
	}
	else_if = {
		limit = {
			trait = lore_high_magic
		}
		change_variable = { which = SpellUnitsToSpawn value = 4 }
	}
}

new_battle_magic_casting = {
	if = {
		limit = {
			check_variable = {
				which = MagicPool
				value > 0
			}
		}
		new_battle_magic_calc_magic_units = yes
		subtract_variable = {
			which = MagicPool
			value = 1
		}
		magic_xp_counter = yes
		if = {
			limit = {
				khorne_summoner = no
			}
			location = {
				ROOT = {
					if = {
						limit = { is_ruler = yes }
						new_battle_magic_spawn_magic_units = yes
					}
					else = {
						liege = {
							new_battle_magic_spawn_magic_units = yes
						}
					}
				}
			}
		}
		if = {
			limit = {
				summons_daemons_in_battle = yes
			}
			location = {
				ROOT = {
					if = {
						limit = { is_ruler = yes }
						new_battle_magic_spawn_demons = yes
					}
					else = {
						liege = {
							new_battle_magic_spawn_demons = yes
						}
					}
				}
			}
		}
	}
}


new_battle_magic_spawn_magic_units = {
	while = {
		limit = {
			check_variable = {
				which = SpellUnitsToSpawn
				value > 0
			}
		}
		if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 16 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 16
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 16 16 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 15 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 15
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 15 15 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 14 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 14
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 14 14 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 13 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 13
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 13 13 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 12 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 12
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 12 12 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 11 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 11
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 11 11 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 10 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 10
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 10 10 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 9 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 9
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 9 9 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 8 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 8
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 8 8 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 7 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 7
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 7 7 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 6 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 6
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 6 6 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 5 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 5
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 5 5 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 4 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 4
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 4 4 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 3 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 3
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 3 3 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 2 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 2
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 2 2 }
				}
				earmark = magical_spells
			}
		}
		else_if = {
			limit = { check_variable = { which = SpellUnitsToSpawn value == 1 } }
			subtract_variable = {
				which = SpellUnitsToSpawn
				value = 1
			}
			#province = PREV to get location scope is needed as using province = THIS on the character has weird results.
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					magical_spells = { 1 1 }
				}
				earmark = magical_spells
			}
		}
	}
}

#Was summoning these demons intentional or not? Who knows! Chaos is funky
new_battle_magic_spawn_demons = {
	random_list = {
		25 = {
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					daemonic_host = { 5 5 }
				}
				earmark = magical_spells
			}
			modifier = {
				factor = 2
				is_doom_very_low = yes
			}
			modifier = {
				factor = 1.5
				is_doom_low = yes
			}
			modifier = {
				factor = 0.5
				is_doom_high = yes
			}
			modifier = {
				factor = 0
				is_doom_very_high = yes
			}
		}
		25 = {
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					daemonic_host = { 10 10 }
				}
				earmark = magical_spells
			}
		}
		25 = {
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					daemonic_host = { 15 15 }
				}
				earmark = magical_spells
			}
			modifier = {
				factor = 0.5
				is_doom_low = yes
			}
			modifier = {
				factor = 2
				is_doom_high = yes
			}
			modifier = {
				factor = 2
				is_doom_very_high = yes
			}
			modifier = {
				factor = 1.5
				khorne_summoner = yes
			}
		}
		25 = {
			spawn_unit = {
				province = PREV
				owner = THIS
				troops = {
					daemonic_host = { 20 20 }
				}
				earmark = magical_spells
			}
			modifier = {
				factor = 0.5
				is_doom_low = yes
			}
			modifier = {
				factor = 2
				is_doom_high = yes
			}
			modifier = {
				factor = 4
				is_doom_very_high = yes
			}
			modifier = {
				factor = 3
				khorne_summoner = yes
			}
		}
	}
}

####
#Rolling to be a mage for rando's
####

roll_chance_to_be_battle_mage = {
	if = {
		limit = {
			#Only for randomly generated characters
			is_adult = yes
			NOT = { has_character_flag = rolled_chance_to_be_battle_mage }
		}
		set_character_flag = rolled_chance_to_be_battle_mage
		if = {
			limit = {
				is_trained_mage = no
			}
			#add trait then remove so we don't have to dupe the burning trigger
			add_trait = magic_potential_1
			if = {
				limit = {
					OR = {
						is_elf = yes
						AND = {
							trait = creature_skaven
							is_female = no
						}
						culture_group = dawi_zharr_group
						trait = creature_amazon
						trait = creature_skink
						trait = creature_beastman
						trait = fimir_maergh
						trait = fimir_dirach
						AND = {
							is_human = yes
							NOT = { culture = amazon_main }
							OR = {
								check_if_mage_should_be_burned = no
								trait = peasant_leader
								trait = heresiarch
							}
						}
						trait = creature_orc
						trait = creature_goblin
					}
				}
				random_list = { #magic
					990 = {
						remove_trait = magic_potential_1
						#nothing
					}
					10 = {
						remove_trait = magic_potential_1
						remove_trait = magic_potential_2
						remove_trait = magic_potential_3
						remove_trait = magic_potential_4
						clr_character_flag = magic_potential_flag_1
						clr_character_flag = magic_potential_flag_2
						clr_character_flag = magic_potential_flag_3
						clr_character_flag = magic_potential_flag_4
						make_random_lore_mage = yes
						modifier = {
							factor = 0
							follower_of_khorne = yes
						}
						modifier = {
							factor = 20
							is_female = yes
							OR = {
								religion = kislev_gods
								religion = northern_gods
							}
							NOT = { year = 2015 }
							#Get some more witchs in the world
						}
						modifier = {
							factor = 0
							trait = witch_hunter
						}
						modifier = {
							factor = 0.5
							is_doom_very_low = yes
						}
						modifier = {
							factor = 1.5
							is_doom_medium = yes
						}
						modifier = {
							factor = 2
							is_doom_high = yes
						}
						modifier = {
							factor = 4
							is_doom_very_high = yes
						}
						modifier = {
							factor = 1.5
							is_doom_high = yes
							open_follower_of_any_chaos_gods = yes
						}
						modifier = {
							factor = 3
							is_doom_very_high = yes
							open_follower_of_any_chaos_gods = yes
						}
						modifier = {
							factor = 3
							is_smart_trigger = yes
						}
						modifier = {
							factor = 6
							#Like a beacon
							top_liege = { has_character_modifier = expelled_k_witch_hunters_order }
							top_liege = { trait = peasant_leader }
							NOT = {
								has_global_flag = magic_legal_old_world
							}
						}
						modifier = {
							factor = 0.1
							is_dumb_trigger = yes
						}
						modifier = {
							factor = 3
							is_learned_trigger = yes
						}
						modifier = {
							factor = 0.3
							has_education_learning_trigger = no
						}
						modifier = {
							factor = 0.1
							NOT = { learning = 7 }
						}
						modifier = {
							factor = 1.5
							OR = {
								#Lets make the mages interesting people
								is_attractive_trigger = yes
								is_unattractive_trigger = yes
							}
						}
						modifier = {
							factor = 0.01
							#Stop swarms of mayor and priest mages
							is_ruler = yes
						}
						modifier = {
							factor = 2
							#These guys actually have formal eduction in magic
							is_elf = yes
						}
						modifier = {
							factor = 3
							#Amazons have the rite of passage that can give magic
							trait = creature_amazon
						}
						modifier = {
							factor = 5
							#Shamans
							OR = {
								trait = creature_goblin
								trait = creature_orc
							}
							is_theocracy = yes
						}
						modifier = {
							factor = 1000
							#1 in 100 birth and almost always spellcasters
							trait = fimir_maergh
						}
						modifier = {
							factor = 100
							#Dev Privilege
							has_character_flag = easter_egg
						}
					}
				}
			}
		}
	}
}

make_random_lore_mage = {
	add_magic_potential = yes
	z_magic_power_random = yes
	z_magic_xp_turnon = yes
	add_random_lore = yes
	set_character_flag = special_marshal
}

add_random_lore = {
	if = {
		limit = {
			is_human = yes
			NOT = { religion_group = chaos_gods_group }
		}
		if = {
			limit = {
				OR = {
					religion = ormazd
					religion = kitabid
				}
				NOR = {
					trait = peasant_leader
					trait = heresiarch
				}
			}
			add_trait = arabyan_scholar
		}
		if = {
			limit = {
				OR = {
					trait = peasant_leader
					trait = heresiarch
					top_liege = { has_character_modifier = expelled_k_witch_hunters_order }
					top_liege = { trait = peasant_leader }
				}
				gender_is_allowed_magic = no
			}
			if = {
				limit = {
					is_female = no
				}
				add_trait = hedge_wizard
			}
			else = {
				add_trait = witch
			}
		}
		random_list = {
			5 = {
				add_trait = lore_ice
				if = {
					limit = {
						is_female = yes
						religion = kislev_gods
					}
					add_trait = ice_witch
				}
				modifier = {
					factor = 10
					OR = {
						religion = kislev_gods
						religion = northern_gods
						culture_group = kislevite_group
					}
				}
				modifier = {
					factor = 0
					NOR = {
						religion = kislev_gods
						religion = northern_gods
						culture_group = kislevite_group
					}
				}
			}
			5 = {
				if = {
					limit = {religion = northern_gods}
					add_trait = hag_witch
					add_trait = lore_hag
				}
				modifier = {
					factor = 10
					religion = northern_gods
				}
				modifier = {
					factor = 0
					NOR = {
						is_female = yes
						religion = kislev_gods
						religion = northern_gods
						culture_group = kislevite_group
					}
				}
			}
			5 = {
				add_lore_of_fire = yes
				#Flashy
				modifier = {
					factor = 5
					culture_group = norscan_group
				}
				modifier = {
					factor = 10
					religion = stromfels
				}
			}
			5 = {
				add_lore_of_beasts = yes
				modifier = {
					factor = 5
					religion = old_faith
				}
				modifier = {
					factor = 5
					culture_group = norscan_group
				}
			}
			5 = {
				add_lore_of_metal = yes
			}
			5 = {
				add_lore_of_light = yes
				modifier = {
					factor = 3
					is_benevolent_trigger = yes
				}
			}
			5 = {
				add_lore_of_life = yes
				modifier = {
					factor = 3
					is_benevolent_trigger = yes
				}
				modifier = {
					factor = 5
					religion = old_faith
				}
				modifier = {
					factor = 10
					religion = shallyan
				}
			}
			5 = {
				add_lore_of_heavens = yes
				if = {
					limit = {
						OR = {
							religion = draconite
							culture_group = oriental_group
						}
					}
					add_trait = astromancer
				}
				modifier = {
					factor = 10
					OR = {
						religion = draconite
						culture_group = oriental_group
					}
				}
			}
			5 = {
				add_lore_of_death = yes
			}
			5 = {
				add_lore_of_shadows = yes
			}
			5 = {
				add_trait = lore_necromancy
				modifier = {
					factor = 10
					religion_group = necromantic_group
				}
				modifier = {
					factor = 0
					NOT = { religion_group = necromantic_group }
				}
			}
		}
	}
	else_if = {
		limit = {
			AND = {
				is_elf = yes
				OR = {
					AND = {
						is_female = no
						NOT = {
							top_liege = {
								trait = malekith
							}
						}
					}
					is_female = yes
				}
			}
		}
		if = {
			limit = {
				culture_group = asur_group
			}
			random_list = {
				50 = {
					add_trait = lore_high_magic
				}
				50 = {
					add_lore_of_light = yes
				}
			}
			add_trait = asur_mage
		}
		else_if = {
			limit = {
				culture_group = druchi_group
			}
			random_list = {
				50 = {
					add_trait = lore_dark_magic
				}
				50 = {
					add_lore_of_shadows = yes
				}
			}	
			if = {
				limit = {
					is_female = yes
				}
				add_trait = druchi_sorceress
			}
			else = {
				add_trait = druchi_mage
			}
		}
		else_if = {
			limit = {
				culture_group = asrai_group
			}
			add_trait = asrai_spellsinger
			random_list = {
				25 = {
					add_trait = lore_high_magic
				}
				25 = {
					add_trait = lore_dark_magic
				}
				25 = {
					add_lore_of_shadows = yes
				}
				25 = {
					add_lore_of_light = yes
				}
			}				
		}
	}
	else_if = {
		limit = {
			culture_group = dawi_zharr_group
		}
		add_trait = chaos_dwarf_sorcerer
	}
	else_if = {
		limit = {
			culture_group = creature_skaven
		}
		if = {
			limit = {
				culture = skryre
			}
			add_trait = warlock_engineer
		}
		else = {
			add_trait = lore_vermin
		}
	}
	else_if = {
		limit = {
			trait = creature_amazon
		}
		add_lore_of_beasts = yes
	}
	else_if = {
		limit = {
			OR = {
				trait = creature_goblin
				trait = creature_orc
			}
		}
		add_trait = lore_waaagh
		add_trait = greenskin_shaman
	}
	else_if = {
		limit = {
			trait = creature_skink
		}
		add_trait = skink_priest
		random_list = {
			65 = { add_lore_of_heavens = yes }
			35 = { add_lore_of_beasts = yes }
		}
	}
	else_if = {
		limit = {
			religion_group = chaos_gods_group
		}
		if = {
			limit = {
				trait = creature_beastman
			}
			add_trait = bray_shaman
		}
		if = {
			limit = {
				open_follower_of_undivided = yes
			}
			add_trait = lore_chaos
		}
		else_if = {
			limit = {
				open_follower_of_nurgle = yes
			}
			add_trait = lore_nurgle
		}
		else_if = {
			limit = {
				open_follower_of_slaanesh = yes
			}
			add_trait = lore_slaanesh
		}
		else_if = {
			limit = {
				open_follower_of_tzeentch = yes
			}
			add_trait = lore_tzeentch
		}
	}
	new_battle_magic_calc_magic_pool = yes
}

remove_lore_trait = {
	remove_trait = chaos_dwarf_sorcerer
	remove_trait = khemri_liche_priest
	remove_trait = warlock_engineer
	remove_trait = lore_vermin
	remove_trait = lore_dark_magic
	remove_trait = lore_necromancy
	remove_trait = fire_elemental
	remove_trait = fire_mystical
	remove_trait = fire_cardinal
	remove_trait = beasts_elemental
	remove_trait = beasts_mystical
	remove_trait = beasts_cardinal
	remove_trait = metal_elemental
	remove_trait = metal_mystical
	remove_trait = metal_cardinal
	remove_trait = light_elemental
	remove_trait = light_mystical
	remove_trait = light_cardinal
	remove_trait = life_elemental
	remove_trait = life_mystical
	remove_trait = life_cardinal
	remove_trait = heavens_elemental
	remove_trait = heavens_mystical
	remove_trait = heavens_cardinal
	remove_trait = death_elemental
	remove_trait = death_mystical
	remove_trait = death_cardinal
	remove_trait = shadows_elemental
	remove_trait = shadows_mystical
	remove_trait = shadows_cardinal
	remove_trait = lore_high_magic
	remove_trait = lore_slaanesh
	remove_trait = lore_nurgle
	remove_trait = lore_tzeentch
	remove_trait = lore_chaos
	remove_trait = lore_ice
	remove_trait = lore_hag
	remove_trait = ice_witch
	remove_trait = hag_witch
	remove_trait = lore_waaagh
}

####
#Magic Maintence effects - some are ported from the old system, if its not in this file it's obsolete but left in for edge cases
####


z_magic_power_complete_removal = {
	remove_character_modifier = magic_power_1
	remove_character_modifier = magic_power_2
	remove_character_modifier = magic_power_3
	remove_character_modifier = magic_power_4
}

add_magic_potential = {
	if = {
		limit = {
			has_magic_potential = no
		}
		if = {
			limit = {
				OR = {
					has_character_flag = magic_potential_flag_1
					has_character_flag = magic_potential_flag_2
					has_character_flag = magic_potential_flag_3
					has_character_flag = magic_potential_flag_4
				}
			}
			if = {
				limit = {
					has_character_flag = magic_potential_flag_1
				}
				add_trait = magic_potential_1
				clr_character_flag = magic_potential_flag_1
			}
			else_if = {
				limit = {
					has_character_flag = magic_potential_flag_2
				}
				add_trait = magic_potential_2
				clr_character_flag = magic_potential_flag_3
			}
			else_if = {
				limit = {
					has_character_flag = magic_potential_flag_3
				}
				add_trait = magic_potential_3
				clr_character_flag = magic_potential_flag_4
			}
			else_if = {
				limit = {
					has_character_flag = magic_potential_flag_4
				}
				add_trait = magic_potential_4
				clr_character_flag = magic_potential_flag_4
			}
		}
		else_if = {
			limit = {
				z_has_magic_power_true = yes
			}
			if = {
				limit = {
					has_character_modifier = magic_power_1
				}
				add_trait = magic_potential_1
			}
			else_if = {
				limit = {
					has_character_modifier = magic_power_2
				}
				add_trait = magic_potential_2
			}
			else_if = {
				limit = {
					OR = {
						has_character_modifier = magic_power_3
						has_character_modifier = magic_power_4
					}
				}
				random_list = {
					9 = {
						add_trait = magic_potential_3
					}
					1 = {
						add_trait = magic_potential_4
					}
				}
			}
		}
		else = {
			random_list = {
				40 = {
					add_trait = magic_potential_1
				}
				30 = {
					add_trait = magic_potential_2
				}
				7 = {
					add_trait = magic_potential_3
				}
				3 = {
					add_trait = magic_potential_4
				}
			}
		}
		clr_character_flag = recessive_mage
	}
}
z_magic_power_random = {
	z_magic_power_complete_removal = yes
	random_list = {
		60 = {
			add_character_modifier = { name = magic_power_1 duration = -1 }
			set_variable = { which = "cl" value = 1}
			magic_power_1_xp_start = yes
			change_learning = 1
		}
		35 = {
			add_character_modifier = { name = magic_power_2 duration = -1 }
			set_variable = { which = "cl" value = 2}
			magic_power_2_xp_start = yes
			change_learning = 2
		}
		4 = {
			add_character_modifier = { name = magic_power_3 duration = -1 }
			set_variable = { which = "cl" value = 3}
			magic_power_3_xp_start = yes
			change_learning = 5
		}
		1 = {
			add_character_modifier = { name = magic_power_4 duration = -1 }
			set_variable = { which = "cl" value = 4}
			magic_power_4_xp_start = yes
			change_learning = 8
		}
	}
}
magic_power_random_teach = {
	z_magic_power_complete_removal = yes
	random_list = {
		60 = {
			modifier={
				factor=0.2
				learning=20
			}
			modifier={
				factor=0.4
				learning=16
			}
			add_character_modifier = { name = magic_power_1 duration = -1 }
			set_variable = { which = "cl" value = 1}
			magic_power_1_xp_start = yes
			change_learning = 1
		}
		35 = {
			modifier={
				factor=0.5
				learning=20
			}
			modifier={
				factor=0.8
				learning=16
			}
			add_character_modifier = { name = magic_power_2 duration = -1 }
			set_variable = { which = "cl" value = 2}
			magic_power_2_xp_start = yes
		}
		10 = {
			modifier={
				factor=2
				learning=20
			}
			modifier={
				factor=1.2
				learning=12
			}
			modifier={
				factor=1.6
				learning=16
			}
			add_character_modifier = { name = magic_power_3 duration = -1 }
			set_variable = { which = "cl" value = 3}
			magic_power_3_xp_start = yes
			change_learning = 1
		}
		5 = {
			modifier={
				factor=2
				learning=20
			}
			modifier={
				factor=1.2
				learning=12
			}
			modifier={
				factor=1.6
				learning=16
			}
			add_character_modifier = { name = magic_power_4 duration = -1 }
			set_variable = { which = "cl" value = 4}
			magic_power_4_xp_start = yes
			change_learning = 2
		}
	}
}


setup_historical_spellcaster = {
	if = {
		#If we rebalances xp don't want to have to go through all the history files
		limit = {
			historical = yes
			khorne_summoner = no
		}
		z_magic_xp_turnon = yes
		if = {
			limit = {
				has_magic_potential = no
				khorne_summoner = no
			}
			add_magic_potential = yes
		}
	}
}

magic_xp_counter = {
	setup_historical_spellcaster = yes
	if = {
		limit = { can_gain_magic_xp = yes}
		if = {
			limit = { trait = magic_potential_1 }
			custom_tooltip = {
				text = gain_magic_xp_tt
				change_variable = { which = "magicxp" value = 1 }
			}
		}
		else_if = {
			limit = { trait = magic_potential_2 }
			custom_tooltip = {
				text = gain_magic_xp_tt
				change_variable = { which = "magicxp" value = 2 }
			}
		}
		else_if = {
			limit = { trait = magic_potential_3 }
			custom_tooltip = {
				text = gain_magic_xp_tt
				change_variable = { which = "magicxp" value = 3 }
			}
		}
		else_if = {
			limit = { trait = magic_potential_4 }
			custom_tooltip = {
				text = gain_magic_xp_tt
				change_variable = { which = "magicxp" value = 5 }
			}
		}
		else = {
			#Fallback
			custom_tooltip = {
				text = gain_magic_xp_tt
				change_variable = { which = "magicxp" value = 1 }
			}
		}
		if = {
			limit = {
				trait = creature_slann
			}
			hidden_tooltip = {
				change_variable = { which = "magicxp" value = 3 }
			}
		}
		if = {
			limit = {
				is_college_of_magic_member = yes
			}
			hidden_tooltip = {
				change_variable = { which = "magicxp" value = 2 }
			}
		}
		#Check for levelup
		character_event = { id = magic_learn_power.1  }
	}
}

magic_xp_counter_major_effect = {
	setup_historical_spellcaster = yes
	if = {
		limit = { can_gain_magic_xp = yes}
		if = {
			limit = { trait = magic_potential_1 }
			custom_tooltip = {
				text = gain_magic_xp_major_tt
				change_variable = { which = "magicxp" value = 3 }
			}
		}
		else_if = {
			limit = { trait = magic_potential_2 }
			custom_tooltip = {
				text = gain_magic_xp_major_tt
				change_variable = { which = "magicxp" value = 6 }
			}
		}
		else_if = {
			limit = { trait = magic_potential_3 }
			custom_tooltip = {
				text = gain_magic_xp_major_tt
				change_variable = { which = "magicxp" value = 9 }
			}
		}
		else_if = {
			limit = { trait = magic_potential_4 }
			custom_tooltip = {
				text = gain_magic_xp_major_tt
				change_variable = { which = "magicxp" value = 15 }
			}
		}
		else = {
			#Fallback
			custom_tooltip = {
				text = gain_magic_xp_major_tt
				change_variable = { which = "magicxp" value = 3 }
			}
		}
		if = {
			limit = {
				trait = creature_slann
			}
			hidden_tooltip = {
				change_variable = { which = "magicxp" value = 15 }
			}
		}
		if = {
			limit = {
				is_college_of_magic_member = yes
			}
			hidden_tooltip = {
				change_variable = { which = "magicxp" value = 6 }
			}
		}
		#Check for levelup
		character_event = { id = magic_learn_power.1  }
	}
}

magic_xp_counter_massive_effect = {
	setup_historical_spellcaster = yes
	if = {
		limit = { can_gain_magic_xp = yes}
		if = {
			limit = { trait = magic_potential_1 }
			custom_tooltip = {
				text = gain_magic_xp_massive_tt
				change_variable = { which = "magicxp" value = 9 }
			}
		}
		else_if = {
			limit = { trait = magic_potential_2 }
			custom_tooltip = {
				text = gain_magic_xp_massive_tt
				change_variable = { which = "magicxp" value = 18 }
			}
		}
		else_if = {
			limit = { trait = magic_potential_3 }
			custom_tooltip = {
				text = gain_magic_xp_massive_tt
				change_variable = { which = "magicxp" value = 27 }
			}
		}
		else_if = {
			limit = { trait = magic_potential_4 }
			custom_tooltip = {
				text = gain_magic_xp_massive_tt
				change_variable = { which = "magicxp" value = 45 }
			}
		}
		else = {
			#Fallback
			custom_tooltip = {
				text = gain_magic_xp_massive_tt
				change_variable = { which = "magicxp" value = 9 }
			}
		}
		if = {
			limit = {
				trait = creature_slann
			}
			hidden_tooltip = {
				change_variable = { which = "magicxp" value = 45 }
			}
		}
		if = {
			limit = {
				is_college_of_magic_member = yes
			}
			hidden_tooltip = {
				change_variable = { which = "magicxp" value = 18 }
			}
		}
		#Check for levelup
		character_event = { id = magic_learn_power.1  }
	}
}

give_magic_xp_based_on_teacher = {
	if = {
		limit = { FROM = { has_character_modifier = magic_power_1 } }
		change_variable = { which = magicxp value = 1 }
	}
	else_if = {
		limit = { FROM = { has_character_modifier = magic_power_2 } }
		change_variable = { which = magicxp value = 2 }
	}
	else_if = {
		limit = { FROM = { has_character_modifier = magic_power_3 } }
		change_variable = { which = magicxp value = 3 }
	}
	else_if = {
		limit = { FROM = { has_character_modifier = magic_power_4 } }
		change_variable = { which = magicxp value = 4 }
	}
}

magic_power_1_xp_start = {
	set_variable = { which = "magicxp" value = 0 }
}
magic_power_2_xp_start = {
	set_variable = { which = "magicxp" value = 150 }
}
magic_power_3_xp_start = {
	set_variable = { which = "magicxp" value = 500 }
}
magic_power_4_xp_start = {
	set_variable = { which = "magicxp" value = 1000 }
}

z_magic_xp_turnon = {
	set_character_flag = special_marshal
	if = {
		limit = {
			z_has_magic_power_true = yes
			is_trained_mage = yes
			NOT = { check_variable = { which = "magicxp" value = 1 } }
		}
		if = {
			limit = { has_character_modifier = magic_power_1 }
			set_variable = { which = "cl" value = 1 }
			magic_power_1_xp_start = yes
		}
		else_if = {
			limit = { has_character_modifier = magic_power_2 }
			set_variable = { which = "cl" value = 2 }
			magic_power_2_xp_start = yes
		}
		else_if = {
			limit = { has_character_modifier = magic_power_3 }
			set_variable = { which = "cl" value = 3 }
			magic_power_3_xp_start = yes
		}
		else_if = {
			limit = { has_character_modifier = magic_power_4 }
			set_variable = { which = "cl" value = 4 }
			magic_power_4_xp_start = yes
		}
	}
	else_if = {
		limit = {
			z_has_magic_power_true = no
			is_trained_mage = yes
		}
		level_up_magic_power = yes
	}
}



level_up_magic_power = {
	z_magic_power_complete_removal = yes
	if = {
		limit = { magic_power_1_threshold = yes }
		set_variable = { which = "cl" value = 1 }
		add_character_modifier = { name = magic_power_1 duration = -1 }
	}
	else_if = {
		limit = { magic_power_2_threshold = yes }
		set_variable = { which = "cl" value = 2 }
		add_character_modifier = { name = magic_power_2 duration = -1 }
	}
	else_if = {
		limit = { magic_power_3_threshold = yes }
		set_variable = { which = "cl" value = 3 }
		add_character_modifier = { name = magic_power_3 duration = -1 }
	}
	else_if = {
		limit = { magic_power_4_threshold = yes }
		set_variable = { which = "cl" value = 4 }
		add_character_modifier = { name = magic_power_4 duration = -1 }
	}
}

reveal_hidden_magic_potential ={
	if = { 
		limit = { 
			has_character_flag = magic_potential_flag_4 
		}
		add_trait = magic_potential_4
		clr_character_flag = magic_potential_flag_4 }
	if = { 
		limit = { 
			has_character_flag = magic_potential_flag_3 
		}
		add_trait = magic_potential_3
		clr_character_flag = magic_potential_flag_3 
	}
	if = { 
		limit = { 
			has_character_flag = magic_potential_flag_2 
		}
		add_trait = magic_potential_2
		clr_character_flag = magic_potential_flag_2 
	}
	if = { 
		limit = { 
			has_character_flag = magic_potential_flag_1
		}
		add_trait = magic_potential_1
		clr_character_flag = magic_potential_flag_1 
	}
}
